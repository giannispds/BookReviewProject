@model IEnumerable<BookReviews.Models.Dto.BookListItemDto>

@{
    ViewData["Title"] = "Books";
    var q = Context.Request.Query;
    string qGenre = q["genre"];
    string qYear = q["year"];
    string qRating = q["rating"];

    var genreOptions = Model
        .Where(m => !string.IsNullOrWhiteSpace(m.Genre))
        .Select(m => m.Genre!)
        .Distinct()
        .OrderBy(x => x)
        .ToList();

    var yearOptions = Model
        .Select(m => m.PublishedYear)
        .Distinct()
        .OrderByDescending(x => x)
        .ToList();
}

<h1 class="mb-3">Books</h1>

<!-- Filters -->
<form method="get" class="card card-body mb-3">
    <div class="row g-2 align-items-end">
        <div class="col-sm-4">
            <label class="form-label">Genre</label>
            <input name="genre" list="genreOptions" value="@qGenre" class="form-control" placeholder="e.g. Fantasy" />
            <datalist id="genreOptions">
                @foreach (var gOpt in genreOptions)
                {
                    <option value="@gOpt"></option>
                }
            </datalist>
        </div>

        <div class="col-sm-3">
            <label class="form-label">Year</label>
            <input name="year" list="yearOptions" value="@qYear" class="form-control" type="number" placeholder="e.g. 2021" />
            <datalist id="yearOptions">
                @foreach (var y in yearOptions)
                {
                    <option value="@y"></option>
                }
            </datalist>
        </div>

        <div class="col-sm-3">
            <label class="form-label">Rating</label>
            <select name="rating" class="form-select">
                <option value="">Any</option>
                @for (int i = 1; i <= 5; i++)
                {
                    <option value="@i" selected="@(qRating == i.ToString())">@i ★</option>
                }
            </select>
        </div>

        <div class="col-sm-2">
            <button class="btn btn-outline-secondary w-100">Filter</button>
        </div>
    </div>
    <div class="mt-2">
        <a class="btn btn-link p-0" href="@Url.Action("Index", "Book")">Reset filters</a>
    </div>
</form>

<table class="table align-middle">
    <thead>
        <tr>
            <th style="width:28%">Title</th>
            <th style="width:18%">Author</th>
            <th style="width:10%">Year</th>
            <th style="width:14%">Genre</th>
            <th style="width:18%">Rating</th>
            <th class="text-end" style="width:12%"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.Author</td>
                <td>@item.PublishedYear</td>
                <td>@item.Genre</td>
                <td>
                    @if (item.ReviewCount > 0)
                    {
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Math.Round(item.AverageRating))
                            {
                                <span style="color:#f5c518">★</span>
                            }
                            else
                            {
                                <span style="color:#ccc">☆</span>
                            }
                        }
                        <small class="text-muted">(@item.ReviewCount reviews)</small>
                    }
                    else
                    {
                        <span class="text-muted">No ratings</span>
                    }
                </td>
                <td class="text-end">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <button type="button" class="btn btn-sm btn-outline-primary"
                                onclick="toggleReviewForm('@item.Id')">
                            Add Review
                        </button>
                    }
                    else
                    {
                        <a class="btn btn-sm btn-outline-secondary"
                           href="/Identity/Account/Login?returnUrl=@(Context.Request.Path + Context.Request.QueryString)">
                            Log in to review
                        </a>
                    }

                </td>
            </tr>

            <tr class="table-light">
                <td colspan="6">
                    <div class="reviews-wrap">
                        @if (item.Reviews.Any())
                        {
                            <ul class="list-unstyled mb-3">
                                @foreach (var r in item.Reviews.Take(5))
                                {
                                    <li class="mb-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= r.Rating)
                                            {
                                                <span style="color:#f5c518">★</span>
                                            }
                                            else
                                            {
                                                <span style="color:#ccc">☆</span>
                                            }
                                        }
                                        <span class="text-muted">— @r.UserName on @r.Created.ToShortDateString()</span>
                                        <div>@r.Content</div>

                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            var liked = r.MyVote == true;
                                            var disliked = r.MyVote == false;

                                            <div class="mt-1">
                                                <form asp-controller="Reviews" asp-action="Vote"
                                                      asp-route-reviewId="@r.Id" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="isUp" value="true" />
                                                    <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                                    <button class="btn btn-sm @(liked ? "btn-success" : "btn-outline-success")">
                                                        👍 <span class="ms-1">@r.UpVotes</span>
                                                    </button>
                                                </form>

                                                <form asp-controller="Reviews" asp-action="Vote"
                                                      asp-route-reviewId="@r.Id" method="post" class="d-inline ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="isUp" value="false" />
                                                    <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                                    <button class="btn btn-sm @(disliked ? "btn-danger" : "btn-outline-danger")">
                                                        👎 <span class="ms-1">@r.DownVotes</span>
                                                    </button>
                                                </form>
                                            </div>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <span class="text-muted">No reviews yet.</span>
                        }
                    </div>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <div id="review-@item.Id" class="mt-3" style="display:none;">
                            <form asp-controller="Reviews" asp-action="Create" method="post">
                                @Html.AntiForgeryToken()

                                <input type="hidden" name="BookId" value="@item.Id" />
                                <input type="hidden" name="ReturnUrl" value="@Context.Request.Path@Context.Request.QueryString" />

                                <div class="mb-2">
                                    <label class="form-label">Rating</label>
                                    <div class="rating">
                                        @for (int i = 5; i >= 1; i--)
                                        {
                                            var rid = $"star-{i}-{item.Id}";
                                            <input type="radio" id="@rid" name="Rating" value="@i" />
                                            <label for="@rid">★</label>
                                        }
                                    </div>
                                </div>

                                <div class="mb-2">
                                    <label class="form-label">Content</label>
                                    <textarea name="Content" class="form-control"></textarea>
                                </div>

                                <button type="submit" class="btn btn-sm btn-success">Submit Review</button>
                            </form>
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<style>
    .rating {
        display: inline-flex;
        flex-direction: row-reverse;
        gap: .25rem;
    }

        .rating input {
            display: none;
        }

        .rating label {
            cursor: pointer;
            font-size: 1.25rem;
            line-height: 1;
            color: #ccc;
        }

            .rating input:checked ~ label,
            .rating label:hover,
            .rating label:hover ~ label {
                color: #f5c518;
            }
</style>

@section Scripts {
    <script>
        function toggleReviewForm(bookId) {
            document.querySelectorAll('[id^="review-"]').forEach(el => {
                if (el.id !== 'review-' + bookId) el.style.display = 'none';
            });
            const formDiv = document.getElementById('review-' + bookId);
            formDiv.style.display = (formDiv.style.display === 'none' || formDiv.style.display === '') ? 'block' : 'none';
        }
    </script>
}
